{"version":3,"sources":["context/UserContextProvider.js","context/TodoContextProvider.js","components/todo/TodoMain.js","components/todo/TodoList.js","components/todo/TodoInput.js","components/todo/TodoItem.js","components/common/Header.js","assets/ink.mp4","components/auth/LoginForm.js","components/auth/Logout.js","components/common/Button.js","components/common/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","useUserContext","useContext","UserContextProvider","children","useState","propsData","user","setUser","inputId","useRef","inputPW","Provider","value","TodoContext","useTodoContext","TodoContextProvider","t_id","t_text","t_complete","todo","setTodo","todoList","setTodoList","nextId","onChange","e","target","current","todoInsert","onRemove","filter","onCompClick","map","TodoMain","form","className","TodoList","modal","setModal","itemId","setItemId","onRemoveClick","viewList","item","viewBox","id","stroke","d","cx","cy","r","title","onConfirm","onCancel","TodoInput","onSubmit","useCallback","preventDefault","ref","width","height","focus","TodoItem","type","onClick","xmlns","xmlnsXlink","xlinkHref","Header","to","userid","text","LoginForm","password","account","setAccount","message","setMessage","history","useHistory","name","onLogin","a","resultUser","replace","autoPlay","muted","src","ink","autoComplete","result","Logout","fetchCb","useEffect","Button","Modal","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e76d225.chunk.js","sourcesContent":["import { createContext, useContext, useRef, useState } from \"react\";\r\n\r\nconst UserContext = createContext();\r\n\r\nexport const useUserContext = () => useContext(UserContext);\r\n\r\nconst UserContextProvider = ({ children }) => {\r\n  const [user, setUser] = useState();\r\n\r\n  const inputId = useRef(null);\r\n  const inputPW = useRef(null);\r\n\r\n  const propsData = { user, setUser, inputId, inputPW };\r\n\r\n  return (\r\n    <UserContext.Provider value={propsData}>{children}</UserContext.Provider>\r\n  );\r\n};\r\nexport default UserContextProvider;\r\n","import React, { createContext, useContext, useRef, useState } from \"react\";\r\n\r\nconst TodoContext = createContext();\r\n\r\nexport const useTodoContext = () => useContext(TodoContext);\r\n\r\nconst TodoContextProvider = ({ children }) => {\r\n  const [todo, setTodo] = useState({\r\n    t_id: 0,\r\n    t_text: \"\",\r\n    t_complete: false,\r\n  });\r\n\r\n  const [todoList, setTodoList] = useState([]);\r\n\r\n  const nextId = useRef(1);\r\n  const inputId = useRef(null);\r\n\r\n  const onChange = (e) => {\r\n    const t_text = e.target.value;\r\n    setTodo({ ...todo, t_text, t_id: nextId.current });\r\n  };\r\n\r\n  const todoInsert = () => {\r\n    if (!todo.t_text) {\r\n      return true;\r\n    }\r\n    setTodoList([...todoList, todo]);\r\n    setTodo({ ...todo, t_text: \"\" });\r\n    nextId.current++;\r\n  };\r\n\r\n  const onRemove = (t_id) => {\r\n    setTodoList(todoList.filter((todo) => todo.t_id !== t_id));\r\n  };\r\n\r\n  const onCompClick = (t_id) => {\r\n    setTodoList(\r\n      todoList.map((todo) =>\r\n        todo.t_id === t_id ? { ...todo, t_complete: !todo.t_complete } : todo\r\n      )\r\n    );\r\n  };\r\n\r\n  const propsData = {\r\n    todo,\r\n    todoList,\r\n    inputId,\r\n    onChange,\r\n    todoInsert,\r\n    onRemove,\r\n    onCompClick,\r\n  };\r\n\r\n  return (\r\n    <TodoContext.Provider value={propsData}>{children}</TodoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TodoContextProvider;\r\n","import \"../../css/TodoMain.css\";\r\nimport { TodoContextProvider } from \"../../context\";\r\n\r\nconst TodoMain = ({ form, children }) => {\r\n  return (\r\n    <TodoContextProvider>\r\n      <main className=\"main_box\">\r\n        <section className=\"form_wrapper\">{form}</section>\r\n        <section className=\"list_wrapper\">{children}</section>\r\n      </main>\r\n    </TodoContextProvider>\r\n  );\r\n};\r\n\r\nexport default TodoMain;\r\n","import { useState } from \"react\";\r\nimport { useTodoContext } from \"../../context\";\r\nimport { Modal } from \"../index\";\r\nimport { TodoItem } from \"../index\";\r\n\r\nconst TodoList = () => {\r\n  const { todoList, onRemove, onCompClick } = useTodoContext();\r\n  const [modal, setModal] = useState(false);\r\n  const [itemId, setItemId] = useState();\r\n\r\n  const onRemoveClick = (itemId) => {\r\n    setModal(true);\r\n    setItemId(itemId);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setModal(false);\r\n  };\r\n\r\n  const onConfirm = () => {\r\n    setModal(false);\r\n    onRemove(itemId);\r\n  };\r\n\r\n  const viewList = todoList.map((item) => {\r\n    return (\r\n      <TodoItem\r\n        todo={item}\r\n        key={item.t_id}\r\n        onRemove={onRemove}\r\n        onCompClick={onCompClick}\r\n        onRemoveClick={onRemoveClick}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <svg viewBox=\"0 0 0 0\" className=\"item_temp\">\r\n        <defs>\r\n          <path id=\"todo_line\" stroke=\"#000\" d=\"M21 12.3h1750v0.1z\"></path>\r\n          <path\r\n            id=\"todo_box\"\r\n            stroke=\"#000\"\r\n            d=\"M21 12.7v5c0 1.3-1 2.3-2.3 2.3H8.3C7 20 6 19 6 17.7V7.3C6 6 7 5 8.3 5h10.4C20 5 21 6 21 7.3v5.4\"\r\n          ></path>\r\n          <path id=\"todo_check\" stroke=\"#000\" d=\"M10 13l2 2 5-5\"></path>\r\n          <circle id=\"todo_circle\" cx=\"13.5\" cy=\"12.5\" r=\"10\"></circle>\r\n        </defs>\r\n      </svg>\r\n      <div className=\"view_list\">{viewList}</div>\r\n      {modal && (\r\n        <Modal\r\n          title=\"ARE YOU SURE?\"\r\n          onConfirm={onConfirm}\r\n          onCancel={onCancel}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import { useCallback, useState } from \"react\";\r\nimport { useTodoContext } from \"../../context\";\r\nimport \"../../css/TodoInput.css\";\r\nimport { Button, Modal } from \"../index\";\r\n\r\nconst TodoInput = () => {\r\n  const { inputId, todo, onChange, todoInsert } = useTodoContext();\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const onConfirm = () => {\r\n    setModal(false);\r\n    inputId.current.focus();\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      setModal(todoInsert());\r\n      e.preventDefault();\r\n    },\r\n    [todoInsert]\r\n  );\r\n  return (\r\n    <>\r\n      <form className=\"input_box\" onSubmit={onSubmit}>\r\n        <input\r\n          ref={inputId}\r\n          value={todo.t_text}\r\n          onChange={onChange}\r\n          className={todo.t_text && \"focus\"}\r\n        />\r\n        <span className=\"label\">ADD TODO HERE..</span>\r\n        <svg width=\"120px\" height=\"26px\" viewBox=\"0 0 120 26\">\r\n          <path d=\"M0,25 C21,25 46,25 74,25 C102,25 118,25 120,25\"></path>\r\n        </svg>\r\n        <span className=\"border\"></span>\r\n        <Button>+</Button>\r\n      </form>\r\n      {modal && <Modal title=\"OOPS! WRITE A TODO.\" onConfirm={onConfirm} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoInput;\r\n","import \"../../css/TodoItem.css\";\r\n\r\nconst TodoItem = ({ todo, onCompClick, onRemoveClick }) => {\r\n  const { t_id, t_text } = todo;\r\n  return (\r\n    <div className=\"todo_box\">\r\n      <label className=\"todo\">\r\n        <input\r\n          className=\"todo_state\"\r\n          type=\"checkbox\"\r\n          onClick={() => onCompClick(t_id)}\r\n        />\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n          width=\"1750px\"\r\n          height=\"24px\"\r\n          viewBox=\"0 0 1750 24\"\r\n          className=\"todo_icon\"\r\n        >\r\n          <use xlinkHref=\"#todo_line\" className=\"todo_line\"></use>\r\n          <use xlinkHref=\"#todo_box\" className=\"todo_box\"></use>\r\n          <use xlinkHref=\"#todo_check\" className=\"todo_check\"></use>\r\n          <use xlinkHref=\"#todo_circle\" className=\"todo_circle\"></use>\r\n        </svg>\r\n\r\n        <div className=\"todo_text\">{t_text}</div>\r\n      </label>\r\n      <div className=\"todo_remove\" onClick={() => onRemoveClick(t_id)}>\r\n        &times;\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useUserContext } from \"../../context\";\r\nimport { Button, GoogleButton } from \"../index\";\r\nimport \"../../css/Header.css\";\r\n\r\nconst Header = ({ title }) => {\r\n  const { user } = useUserContext();\r\n  return (\r\n    <>\r\n      <header>\r\n        <div className=\"header_wrapper\">\r\n          <div className=\"logo_box\">\r\n            <Link to=\"/\" className=\"logo\">\r\n              TODOs\r\n            </Link>\r\n          </div>\r\n          {user?.userid ? (\r\n            <nav className=\"main_nav\">\r\n              <div className=\"user_info\">[ {user.userid} ] </div>\r\n              <Button text=\"LOGOUT\">\r\n                <Link to=\"/logout\">LOGOUT</Link>\r\n              </Button>\r\n            </nav>\r\n          ) : (\r\n            <nav className=\"main_nav\">\r\n              <Button text=\"JOIN\">\r\n                <Link to=\"/join\">JOIN</Link>\r\n              </Button>\r\n              <Button text=\"LOGIN\">\r\n                <Link to=\"/login\">LOGIN</Link>\r\n              </Button>\r\n              {/* <GoogleButton>\r\n                <Link to=\"/gogle\">Gogle LOGIN</Link>\r\n              </GoogleButton> */}\r\n            </nav>\r\n          )}\r\n        </div>\r\n      </header>\r\n      <div className=\"sub_title\">TODOLIST</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/ink.5517d17d.mp4\";","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"../index\";\r\nimport ink from \"../../assets/ink.mp4\";\r\nimport \"../../css/LoginForm.css\";\r\nimport { useUserContext } from \"../../context/\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchLogin } from \"../../modules/fetchModule\";\r\n\r\nconst LoginForm = () => {\r\n  const { setUser, inputId, inputPW } = useUserContext();\r\n  const [account, setAccount] = useState({\r\n    userid: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const [message, setMessage] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  const onChange = (e) => {\r\n    setAccount({ ...account, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onCheck = () => {\r\n    if (!account.userid) return `PLEASE ENTER YOUR \"ID\"`;\r\n    if (!account.password) return `PLEASE ENTER YOUR \"PASSWORD\"`;\r\n    return false;\r\n  };\r\n\r\n  const onModal = () => {\r\n    const result = onCheck();\r\n    if (!result) {\r\n      onLogin();\r\n    } else {\r\n      setModal(true);\r\n      setMessage(result);\r\n    }\r\n  };\r\n\r\n  const onConfirm = () => {\r\n    setModal(false);\r\n    setMessage(false);\r\n    message === `PLEASE ENTER YOUR \"ID\"`\r\n      ? inputId.current.focus()\r\n      : inputPW.current.focus();\r\n  };\r\n\r\n  const onLogin = async () => {\r\n    // const resultUser = await fetchLogin(account.userid, account.password);\r\n    const resultUser = account;\r\n    await setUser(resultUser);\r\n    history.replace(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth_form\">\r\n      <video autoPlay muted>\r\n        <source src={ink} type=\"video/mp4\" />\r\n      </video>\r\n      <div className=\"inputs\">\r\n        <div className=\"userid\">\r\n          <input\r\n            ref={inputId}\r\n            type=\"text\"\r\n            name=\"userid\"\r\n            autoComplete=\"off\"\r\n            onChange={onChange}\r\n            className={account.userid && \"focus\"}\r\n          />\r\n          <span className=\"label\">ID</span>\r\n          <svg width=\"120px\" height=\"26px\" viewBox=\"0 0 120 26\">\r\n            <path d=\"M0,25 C21,25 46,25 74,25 C102,25 118,25 120,25\"></path>\r\n          </svg>\r\n          <span className=\"border\"></span>\r\n        </div>\r\n        <div className=\"password\">\r\n          <input\r\n            ref={inputPW}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            autoComplete=\"off\"\r\n            onChange={onChange}\r\n            className={account.password && \"focus\"}\r\n          />\r\n          <span className=\"label\">PASSWORD</span>\r\n          <svg width=\"120px\" height=\"26px\" viewBox=\"0 0 120 26\">\r\n            <path d=\"M0,25 C21,25 46,25 74,25 C102,25 118,25 120,25\"></path>\r\n          </svg>\r\n          <span className=\"border\"></span>\r\n        </div>\r\n        <Button text=\"LOGIN\" onClick={onModal}>\r\n          LOGIN\r\n        </Button>\r\n      </div>\r\n      {modal && <Modal title={message} onConfirm={onConfirm} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { useCallback, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useUserContext } from \"../../context/\";\r\nimport { fetchLogout } from \"../../modules/fetchModule\";\r\n\r\nconst Logout = () => {\r\n  const history = useHistory();\r\n  const { setUser } = useUserContext();\r\n\r\n  const fetchCb = useCallback(async () => {\r\n    // await fetchLogout();\r\n    await setUser([]);\r\n    history.replace(\"/\");\r\n  }, [setUser, history]);\r\n  useEffect(fetchCb, [fetchCb]);\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default Logout;\r\n","import \"../../css/Button.css\";\r\n\r\nconst Button = ({ children, text, onClick }) => {\r\n  return (\r\n    <div className=\"btn_box\">\r\n      <span className=\"mask\">{text}</span>\r\n      <button onClick={onClick}>{children}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { Button } from \"../index\";\r\nimport \"../../css/Modal.css\";\r\n\r\nconst Modal = ({ onConfirm, onCancel, title }) => {\r\n  return (\r\n    <div className=\"modal_wrap\">\r\n      <div className=\"modal_block\">\r\n        <h2>{title}</h2>\r\n        <div className=\"buttons\">\r\n          {onCancel ? (\r\n            <>\r\n              <Button text=\"DELETE\" onClick={onConfirm}>\r\n                DELETE\r\n              </Button>\r\n              <Button text=\"CANCEL\" onClick={onCancel}>\r\n                CANCEL\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <Button text=\"OK\" onClick={onConfirm}>\r\n              OK\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { UserContextProvider } from \"./context\";\r\nimport { TodoMain, TodoInput, TodoList } from \"./components\";\r\nimport { Header, LoginForm, Logout, AuthRoute } from \"./components\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <UserContextProvider>\r\n        <Header />\r\n        <Route path=\"/\" exact>\r\n          {/* <AuthRoute> */}\r\n          <TodoMain form={<TodoInput />}>\r\n            <TodoList />\r\n          </TodoMain>\r\n          {/* </AuthRoute> */}\r\n        </Route>\r\n        <Route path=\"/login\" exact component={LoginForm} />\r\n        <Route path=\"/logout\" exact component={Logout} />\r\n      </UserContextProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}